{"version":3,"sources":["components/AddTasksComponent/AddTaskComponent.module.css","components/FilterNameComponent/FilterNameComponent.module.css","components/App.module.css","components/FilterDateComponent/FilterDateComponent.module.css","components/TaskListComponent/TaskListComponent.module.css","redux/tasks/tasksActions.js","components/AddTasksComponent/AddTasksComponent.js","redux/sort/sortActions.js","components/SortTasksComponent/SortTasksComponent.js","redux/selectors/selectors.js","components/TaskListComponent/TaskListComponent.js","redux/filterByName/filterByNameActions.js","components/FilterNameComponent/FilterNameComponent.js","redux/filterByDate/filterByDateActions.js","components/FilterDateComponent/FilterDateComponent.js","components/App.js","redux/tasks/tasksReducer.js","redux/filterByName/filterByNameReducer.js","redux/filterByDate/filterByDateReducer.js","redux/store.js","redux/sort/sortReducers.js","redux/localStorage.js","index.js","components/SortTasksComponent/SortTasksComponent.module.css"],"names":["module","exports","ActionType","AddTaskComponent","state","text","date","showValidationError","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","trim","length","task","showDate","split","reverse","join","completed","id","uuidv4","console","log","props","onSubmit","this","inputSwitch","styles","inputError","inputSuccess","btnSwitch","btnError","textInput","cx","input","addBtn","btn","className","mainWrapper","title","form","type","onChange","placeholder","dateContainer","span","dateInput","spanError","Component","mapDispatchToProps","payload","connect","SortTasksComponent","sortDirectionNameAsc","sortDirectionDateAsc","sortDirectionChange","sort","onSort","prevState","sortName","sortDate","viewName","viewDate","onClick","btnContainer","filterName","filterByName","filterDate","filterByDate","filteredByDate","createSelector","tasks","filter","newDateFromTask","Date","newDateFromFilter","getDate","getMonth","getFullYear","filteredByDateAndName","toLowerCase","includes","sortedArray","initialTasks","slice","a","b","nameA","nameB","dateA","dateB","onUpdateCompleted","onDeleteTask","selectors","firstLine","listItem","list","map","notcompleted","textDecor","classNames","key","checked","FilterNameComponent","onChangeFilter","FilterDateComponent","React","App","tasksReducer","filterByNameReducer","filterByDateReducer","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","devToolsEnhancer","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,MAAQ,gCAAgC,KAAO,+BAA+B,MAAQ,gCAAgC,aAAe,uCAAuC,WAAa,qCAAqC,IAAM,8BAA8B,SAAW,mCAAmC,KAAO,+BAA+B,UAAY,oCAAoC,cAAgB,wCAAwC,UAAY,sC,mBCAhhBD,EAAOC,QAAU,CAAC,YAAc,yCAAyC,MAAQ,mCAAmC,MAAQ,qC,mBCA5HD,EAAOC,QAAU,CAAC,YAAc,yBAAyB,MAAQ,qB,mBCAjED,EAAOC,QAAU,CAAC,YAAc,yCAAyC,MAAQ,mCAAmC,MAAQ,qC,sDCA5HD,EAAOC,QAAU,CAAC,YAAc,uCAAuC,MAAQ,iCAAiC,KAAO,gCAAgC,SAAW,oCAAoC,UAAY,qCAAqC,IAAM,+BAA+B,UAAY,qCAAqC,aAAe,0C,6KCD/UC,EACA,YADAA,EAED,WAFCA,EAGE,cAHFA,EAII,gB,gCCGXC,E,4MACJC,MAAQ,CAAEC,KAAM,GAAIC,KAAM,GAAIC,oBAAqB,M,EAEnDC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAK9BC,aAAe,SAACL,GACdA,EAAEM,iBADkB,MAEG,EAAKX,MAApBC,EAFY,EAEZA,KAAMC,EAFM,EAENA,KAEd,GAAa,KAATA,EAOJ,GAA2B,IAAvBD,EAAKW,OAAOC,OAAhB,CAOA,IAAMC,EAAO,CACXb,OACAC,OACAa,SAAUb,EAAKc,MAAM,KAAKC,UAAUC,KAAK,KACzCC,WAAW,EACXC,GAAIC,eAGNC,QAAQC,IAAR,eAAiBT,IACjB,EAAKU,MAAMC,SAAX,eAAyBX,IAEzB,EAAKR,SAAS,CAAEL,KAAM,GAAIC,KAAM,GAAIC,oBAAqB,YAjBvD,EAAKG,SAAS,CACZH,oBAAqB,4BARvB,EAAKG,SAAS,CACZH,oBAAqB,sB,uDA0BjB,IAAD,EACqCuB,KAAK1B,MAAzCC,EADD,EACCA,KAAME,EADP,EACOA,oBAAqBD,EAD5B,EAC4BA,KAC7ByB,EAAcxB,EAChByB,IAAOC,WACPD,IAAOE,aACLC,EAAY5B,GAAuByB,IAAOI,SAE1CC,EAAYC,IAAGN,IAAOO,MAAOR,GAC7BS,EAASF,IAAGN,IAAOS,IAAKN,GAE9B,OACE,yBAAKO,UAAWV,IAAOW,aACrB,wBAAID,UAAWV,IAAOY,OAAtB,YACA,0BAAMf,SAAUC,KAAKhB,aAAc4B,UAAWV,IAAOa,MACnD,2BACEC,KAAK,OACLlC,KAAK,OACLC,MAAOR,EACP0C,SAAUjB,KAAKtB,aACfwC,YAAY,aACZN,UAAWL,IAEb,4BAAQS,KAAK,SAASJ,UAAWF,GAAjC,aAIF,yBAAKE,UAAWV,IAAOiB,eACrB,0BAAMP,UAAWV,IAAOkB,MAAxB,YACA,2BACEJ,KAAK,OACLlC,KAAK,OACLC,MAAOP,EACPyC,SAAUjB,KAAKtB,aACfwB,OAAQA,IAAOmB,aAGlB5C,GACC,0BAAMmC,UAAWV,IAAOoB,WAAY7C,Q,GA/Ef8C,aAsFzBC,EAAqB,CACzBzB,SDhFqB,SAACX,GAAD,MAAW,CAChC4B,KAAM5C,EACNqD,QAAS,CAAErC,WCiFEsC,cAAQ,KAAMF,EAAdE,CAAkCrD,G,gBCjGpCD,EACF,UCKLuD,E,4MAKJrD,MAAQ,CACNsD,sBAAsB,EACtBC,sBAAsB,G,EAGxBC,oBAAsB,SAACnD,GACrB,IAAMoD,EAAOpD,EAAEE,OAAOC,MAEtBkD,EADmB,EAAKlC,MAAhBkC,QACDD,GACM,YAATA,GAA+B,YAATA,GACxB,EAAKnD,UAAS,SAACqD,GAAD,MAAgB,CAC5BL,sBAAuBK,EAAUL,yBAIxB,YAATG,GAA+B,YAATA,GACxB,EAAKnD,UAAS,SAACqD,GAAD,MAAgB,CAC5BJ,sBAAuBI,EAAUJ,0B,uDAK7B,IAAD,EACgD7B,KAAK1B,MAApDsD,EADD,EACCA,qBAAsBC,EADvB,EACuBA,qBACxBK,EAAWN,EAAuB,UAAY,UAC9CO,EAAWN,EAAuB,UAAY,UAC9CO,EAAWR,EAAuB,MAAQ,MAC1CS,EAAWR,EAAuB,UAAY,UAEpD,OACE,yBAAKS,QAAStC,KAAK8B,oBAAqBlB,UAAWV,IAAOW,aACxD,0BAAMD,UAAWV,IAAOY,OAAxB,aACA,yBAAKF,UAAWV,IAAOqC,cACrB,4BACEvB,KAAK,SACLlC,KAAMoD,EACNI,QAAStC,KAAK+B,KACdnB,UAAWV,IAAOS,KAEjByB,GAEH,4BACEpB,KAAK,SACLlC,KAAMqD,EACNG,QAAStC,KAAK+B,KACdnB,UAAWV,IAAOS,KAEjB0B,GAEH,4BACErB,KAAK,SACLlC,KAAK,YACLwD,QAAStC,KAAK+B,KACdnB,UAAWV,IAAOS,KAJpB,e,GAtDuBY,aAoE3BC,EAAqB,CACzBQ,ODvEoB,SAACD,GAAD,MAAW,CAC/Bf,KAAM5C,EACNqD,QAAS,CAAEM,WCwEEL,cAAQ,KAAMF,EAAdE,CAAkCC,G,wBC1EpCa,EAAa,SAAClE,GAAD,OAAWA,EAAMmE,cAC9BC,EAAa,SAACpE,GAAD,OAAWA,EAAMqE,cAG9BC,EAAiBC,YAC5B,CAPmB,SAACvE,GAAD,OAAWA,EAAMwE,OAO5BJ,IACR,SAACI,EAAOJ,GAAR,OACEI,EAAMC,QAAO,SAAC3D,GACZ,GAAmB,KAAfsD,EACF,OAAOtD,EAEP,IAAM4D,EAAkB,IAAIC,KAAK7D,EAAKZ,MAChC0E,EAAoB,IAAID,KAAKP,GAQnC,MAPmB,UAAMM,EAAgBG,UAAtB,YACjBH,EAAgBI,WAAa,EADZ,YAEfJ,EAAgBK,iBACC,UAAMH,EAAkBC,UAAxB,YACnBD,EAAkBE,WAAa,EADZ,YAEjBF,EAAkBG,qBAOjBC,EAAwBT,YACnC,CAACD,EAAgBJ,IACjB,SAACM,EAAOC,GAAR,OACED,EAAMC,QAAO,SAAC3D,GAAD,OACXA,EAAKb,KAAKgF,cAAcC,SAAST,EAAOQ,qBAIjCE,EAAcZ,YACzB,CAACS,EAhCmB,SAAChF,GAAD,OAAWA,EAAMyD,QAiCrC,SAACe,EAAOf,GACN,IAAI2B,EAAeZ,EAAMa,QACzB,OAAQ5B,GACN,IAAK,UACH,OAAO2B,EAAaC,QAAQ5B,MAAK,SAAC6B,EAAGC,GACnC,IAAMC,EAAQF,EAAErF,KAAKgF,cACfQ,EAAQF,EAAEtF,KAAKgF,cACrB,OAAIO,EAAQC,GAAe,EACvBD,EAAQC,EAAc,EACnB,KAEX,IAAK,UACH,OAAOL,EAAaC,QAAQ5B,MAAK,SAAC6B,EAAGC,GACnC,IAAMC,EAAQF,EAAErF,KAAKgF,cACfQ,EAAQF,EAAEtF,KAAKgF,cACrB,OAAIO,EAAQC,GAAe,EACvBD,EAAQC,EAAc,EACnB,KAEX,IAAK,UACH,OAAOL,EAAaC,QAAQ5B,MAAK,SAAC6B,EAAGC,GACnC,IAAMG,EAAQJ,EAAEpF,KACVyF,EAAQJ,EAAErF,KAChB,OAAO,IAAIyE,KAAKgB,GAAS,IAAIhB,KAAKe,MAEtC,IAAK,UACH,OAAON,EAAaC,QAAQ5B,MAAK,SAAC6B,EAAGC,GACnC,IAAMG,EAAQJ,EAAEpF,KACVyF,EAAQJ,EAAErF,KAChB,OAAO,IAAIyE,KAAKe,GAAS,IAAIf,KAAKgB,MAEtC,IAAK,YACH,OAAOP,EACT,QACE,OAAOZ,MCKTtB,EAAqB,CACzB0C,kBLvD0B,SAACxE,GAAD,MAAS,CACnCsB,KAAM5C,EACNqD,QAAS/B,IKsDTyE,aL7DwB,SAACzE,GAAD,MAAS,CACjCsB,KAAM5C,EACNqD,QAAS/B,KK8DIgC,eATS,SAACpD,GAAD,MAAY,CAClCwE,MAAOsB,EAAsB9F,MAQSkD,EAAzBE,EA1EW,SAAC,GAAgD,IAA9CoB,EAA6C,EAA7CA,MAAOoB,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aAC/CE,EAAY7D,IAAGN,IAAOoE,SAAUpE,IAAOmE,WAC7C,OACE,yBAAKzD,UAAWV,IAAOW,aACrB,wBAAID,UAAWV,IAAOY,OAAtB,uBACA,wBAAIF,UAAWV,IAAOqE,MACpB,wBAAI3D,UAAWyD,GACb,6BACE,yCAEF,6BACE,yCAEF,6BACE,2CAEF,6BACE,4CAGHvB,GACCA,EAAM0B,KAAI,SAACpF,GAAU,IACXK,EAA4BS,IAA5BT,UAAWgF,EAAiBvE,IAAjBuE,aACbC,EAAYC,IAChBvF,EAAKK,UAAYA,EAAYgF,GAE/B,OACE,wBAAIG,IAAKxF,EAAKM,GAAIkB,UAAWV,IAAOoE,UAClC,6BACE,uBAAG1D,UAAW8D,GAAYtF,EAAKb,OAEjC,6BACE,2BAAIa,EAAKC,WAEX,6BACE,4CAEE,2BACE2B,KAAK,WACL6D,QAASzF,EAAKK,UACdwB,SAAU,kBAAMiD,EAAkB9E,EAAKM,SAI7C,6BACE,4BACEsB,KAAK,SACLJ,UAAWV,IAAOS,IAClB2B,QAAS,kBAAM6B,EAAa/E,EAAKM,MAHnC,oB,iBCtDLtB,EACQ,oBCMf0G,E,4MAKJpG,aAAe,SAACC,GACd,EAAKmB,MAAMiF,eAAepG,EAAEE,OAAOE,Q,uDAE3B,IACAgE,EAAW/C,KAAKF,MAAhBiD,OACR,OACE,yBAAKnC,UAAWV,IAAOW,aACrB,0BAAMD,UAAWV,IAAOY,OAAxB,uBACA,2BACEE,KAAK,OACLjC,MAAOgE,EACP9B,SAAUjB,KAAKtB,aACfwC,YAAY,0BACZN,UAAWV,IAAOO,a,GAlBMc,aA6B5BC,EAAqB,CACzBuD,eDjC0B,SAAChC,GAAD,MAAa,CACvC/B,KAAM5C,EACNqD,QAAS,CAAEsB,aCkCErB,eARS,SAACpD,GAAD,MAAY,CAClCyE,OAAQqB,EAAqB9F,MAS7BkD,EAFaE,CAGboD,G,iBC3CW1G,EACQ,oBCMf4G,E,4MAKJtG,aAAe,SAACC,GACd,EAAKmB,MAAMiF,eAAepG,EAAEE,OAAOE,Q,uDAG3B,IACAgE,EAAW/C,KAAKF,MAAhBiD,OACR,OACE,yBAAKnC,UAAWV,IAAOW,aACrB,0BAAMD,UAAWV,IAAOY,OAAxB,kBACA,6BACE,2BACEE,KAAK,OACLlC,KAAK,OACLC,MAAOgE,EACP9B,SAAUjB,KAAKtB,qB,GAnBOuG,IAAM1D,WA+BlCC,GAAqB,CACzBuD,eDnC0B,SAAChC,GAAD,MAAa,CACvC/B,KAAM5C,EACNqD,QAAS,CAAEsB,aCoCErB,gBARS,SAACpD,GAAD,MAAY,CAClCyE,OAAQqB,EAAqB9F,MAS7BkD,GAFaE,CAGbsD,GC1BaE,GAXH,kBACV,yBAAKtE,UAAWV,IAAOW,aACrB,wBAAID,UAAWV,IAAOY,OAAtB,aACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,2BCQWqE,GArBM,WAAoC,IAAnC7G,EAAkC,uDAA1B,GAA0B,yCAApB0C,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QACxC,OAAQT,GACN,KAAK5C,EACH,OAAOqD,EAET,KAAKrD,EACH,MAAM,GAAN,oBAAWE,GAAX,CAAkBmD,EAAQrC,OAE5B,KAAKhB,EACH,OAAOE,EAAMyE,QAAO,SAAC3D,GAAD,OAAUA,EAAKM,KAAO+B,KAE5C,KAAKrD,EACH,OAAOE,EAAMkG,KAAI,SAACpF,GAAD,OACfA,EAAKM,KAAO+B,EAAZ,2BAA2BrC,GAA3B,IAAiCK,WAAYL,EAAKK,YAAcL,KAGpE,QACE,OAAOd,ICPE8G,GAVa,WAAoC,IAAnC9G,EAAkC,uDAA1B,GAA0B,yCAApB0C,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QAC/C,OAAQT,GACN,KAAK5C,EACH,OAAOqD,EAAQsB,OAEjB,QACE,OAAOzE,ICIE+G,GAVa,WAAoC,IAAnC/G,EAAkC,uDAA1B,GAA0B,yCAApB0C,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QAC/C,OAAQT,GACN,KAAK5C,EACH,OAAOqD,EAAQsB,OAEjB,QACE,OAAOzE,ICAPgH,GAAcC,2BAAgB,CAClCzC,MAAOqC,GACP1C,aAAc2C,GACdzC,aAAc0C,GACdtD,KCV2B,WAAoC,IAAnCzD,EAAkC,uDAA1B,GAA0B,yCAApB0C,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QAChD,OAAQT,GACN,KAAK5C,EACH,OAAOqD,EAAQM,KACjB,QACE,OAAOzD,MDQPkH,GEfmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GAEP,YADAlG,QAAQC,IAAIiG,IFOOC,GAIRC,GAFDC,uBAAYX,GAAaE,GAAgBU,+B,MGTvDF,GAAMG,WAAU,YDKS,SAAC7H,GACxB,IACE,IAAMmH,EAAkBG,KAAKQ,UAAU9H,GACvCoH,aAAaW,QAAQ,QAASZ,GAC9B,MAAOK,GACPlG,QAAQC,IAAIiG,ICTdQ,CAAU,CACRxD,MAAOkD,GAAMO,WAAWzD,WAI5B0D,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,IACf,kBAAC,GAAD,OAEFU,SAASC,eAAe,U,kBCjB1BzI,EAAOC,QAAU,CAAC,YAAc,wCAAwC,MAAQ,kCAAkC,aAAe,yCAAyC,IAAM,mC","file":"static/js/main.179ea45b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"AddTaskComponent_mainWrapper__2Z2Z0\",\"title\":\"AddTaskComponent_title__RhODF\",\"form\":\"AddTaskComponent_form__2Jq6r\",\"input\":\"AddTaskComponent_input__28oE-\",\"inputSuccess\":\"AddTaskComponent_inputSuccess__3Mbhn\",\"inputError\":\"AddTaskComponent_inputError__Aq7JT\",\"btn\":\"AddTaskComponent_btn__2wlrm\",\"btnError\":\"AddTaskComponent_btnError__3dpUn\",\"span\":\"AddTaskComponent_span__2lR_S\",\"spanError\":\"AddTaskComponent_spanError__nd4u6\",\"dateContainer\":\"AddTaskComponent_dateContainer__3eXFb\",\"dateInput\":\"AddTaskComponent_dateInput__2USna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"FilterNameComponent_mainWrapper__3Tr1D\",\"title\":\"FilterNameComponent_title__kmttE\",\"input\":\"FilterNameComponent_input__u8Lsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"App_mainWrapper__3T06F\",\"title\":\"App_title__1cf8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"FilterDateComponent_mainWrapper__1zSkq\",\"title\":\"FilterDateComponent_title__3vrs0\",\"input\":\"FilterDateComponent_input__1DB3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"TaskListComponent_mainWrapper__2ZikV\",\"title\":\"TaskListComponent_title__3vxm5\",\"list\":\"TaskListComponent_list__1bg-B\",\"listItem\":\"TaskListComponent_listItem__2Falh\",\"firstLine\":\"TaskListComponent_firstLine__ElYQy\",\"btn\":\"TaskListComponent_btn__1qfC_\",\"completed\":\"TaskListComponent_completed__3-3sj\",\"notCompleted\":\"TaskListComponent_notCompleted__JPt7i\"};","export const ActionType = {\r\n  GET_TASKS: \"GET_TASKS\",\r\n  ADD_TASK: \"ADD_TASK\",\r\n  DELETE_TASK: \"DELETE_TASK\",\r\n  COMPLETE_TASK: \"COMPLETE_TASK\",\r\n};\r\n\r\n// Regular todo upload (from json or else)\r\n\r\nexport const getTasks = (tasks) => ({\r\n  type: ActionType.GET_TASKS,\r\n  payload: { tasks },\r\n});\r\n///\r\nexport const addTask = (task) => ({\r\n  type: ActionType.ADD_TASK,\r\n  payload: { task },\r\n});\r\n\r\nexport const deleteTask = (id) => ({\r\n  type: ActionType.DELETE_TASK,\r\n  payload: id,\r\n});\r\n\r\nexport const completeTask = (id) => ({\r\n  type: ActionType.COMPLETE_TASK,\r\n  payload: id,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport * as tasksActions from \"../../redux/tasks/tasksActions\";\r\nimport styles from \"./AddTaskComponent.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nclass AddTaskComponent extends Component {\r\n  state = { text: \"\", date: \"\", showValidationError: null };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Хендл менять нельзя т.к. я его повесил и на дейт и на текст\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { text, date } = this.state;\r\n\r\n    if (date === \"\") {\r\n      this.setState({\r\n        showValidationError: \"Please, set date\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (text.trim().length === 0) {\r\n      this.setState({\r\n        showValidationError: \"Please, enter task\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const task = {\r\n      text,\r\n      date,\r\n      showDate: date.split(\"-\").reverse().join(\"-\"),\r\n      completed: false,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    console.log({ ...task });\r\n    this.props.onSubmit({ ...task });\r\n\r\n    this.setState({ text: \"\", date: \"\", showValidationError: null });\r\n  };\r\n\r\n  render() {\r\n    const { text, showValidationError, date } = this.state;\r\n    const inputSwitch = showValidationError\r\n      ? styles.inputError\r\n      : styles.inputSuccess;\r\n    const btnSwitch = showValidationError && styles.btnError;\r\n\r\n    const textInput = cx(styles.input, inputSwitch);\r\n    const addBtn = cx(styles.btn, btnSwitch);\r\n\r\n    return (\r\n      <div className={styles.mainWrapper}>\r\n        <h2 className={styles.title}>Add task</h2>\r\n        <form onSubmit={this.handleSubmit} className={styles.form}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            value={text}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Write task\"\r\n            className={textInput}\r\n          />\r\n          <button type=\"submit\" className={addBtn}>\r\n            Add Todo\r\n          </button>\r\n        </form>\r\n        <div className={styles.dateContainer}>\r\n          <span className={styles.span}>Set date</span>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={date}\r\n            onChange={this.handleChange}\r\n            styles={styles.dateInput}\r\n          />\r\n        </div>\r\n        {showValidationError && (\r\n          <span className={styles.spanError}>{showValidationError}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: tasksActions.addTask,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTaskComponent);\r\n","export const ActionType = {\n  SORT_BY: \"SORT_BY\",\n};\n\nexport const sortBy = (sort) => ({\n  type: ActionType.SORT_BY,\n  payload: { sort },\n});\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./SortTasksComponent.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as sortActions from \"../../redux/sort/sortActions\";\r\n\r\nclass SortTasksComponent extends Component {\r\n  static propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    sortDirectionNameAsc: true,\r\n    sortDirectionDateAsc: true,\r\n  };\r\n\r\n  sortDirectionChange = (e) => {\r\n    const sort = e.target.name;\r\n    const { onSort } = this.props;\r\n    onSort(sort);\r\n    if (sort === \"nameAsc\" || sort === \"nameDsc\") {\r\n      this.setState((prevState) => ({\r\n        sortDirectionNameAsc: !prevState.sortDirectionNameAsc,\r\n      }));\r\n    }\r\n\r\n    if (sort === \"dateAsc\" || sort === \"dateDsc\") {\r\n      this.setState((prevState) => ({\r\n        sortDirectionDateAsc: !prevState.sortDirectionDateAsc,\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { sortDirectionNameAsc, sortDirectionDateAsc } = this.state;\r\n    const sortName = sortDirectionNameAsc ? \"nameAsc\" : \"nameDsc\";\r\n    const sortDate = sortDirectionDateAsc ? \"dateAsc\" : \"dateDsc\";\r\n    const viewName = sortDirectionNameAsc ? \"A-Z\" : \"Z-A\";\r\n    const viewDate = sortDirectionDateAsc ? \"New-Old\" : \"Old-New\";\r\n\r\n    return (\r\n      <div onClick={this.sortDirectionChange} className={styles.mainWrapper}>\r\n        <span className={styles.title}>Sort Task</span>\r\n        <div className={styles.btnContainer}>\r\n          <button\r\n            type=\"button\"\r\n            name={sortName}\r\n            onClick={this.sort}\r\n            className={styles.btn}\r\n          >\r\n            {viewName}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            name={sortDate}\r\n            onClick={this.sort}\r\n            className={styles.btn}\r\n          >\r\n            {viewDate}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            name=\"sortClear\"\r\n            onClick={this.sort}\r\n            className={styles.btn}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSort: sortActions.sortBy,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SortTasksComponent);\r\n","import { createSelector } from \"reselect\";\n\nexport const tasks = (state) => state.tasks;\n\nexport const filterName = (state) => state.filterByName;\nexport const filterDate = (state) => state.filterByDate;\nexport const sortBy = (state) => state.sort;\n\nexport const filteredByDate = createSelector(\n  [tasks, filterDate],\n  (tasks, filterDate) =>\n    tasks.filter((task) => {\n      if (filterDate === \"\") {\n        return task;\n      } else {\n        const newDateFromTask = new Date(task.date);\n        const newDateFromFilter = new Date(filterDate);\n        const checkDateTask = `${newDateFromTask.getDate()}/${\n          newDateFromTask.getMonth() + 1\n        }/${newDateFromTask.getFullYear()}`;\n        const checkDateFilter = `${newDateFromFilter.getDate()}/${\n          newDateFromFilter.getMonth() + 1\n        }/${newDateFromFilter.getFullYear()}`;\n\n        return checkDateTask === checkDateFilter;\n      }\n    })\n);\n\nexport const filteredByDateAndName = createSelector(\n  [filteredByDate, filterName],\n  (tasks, filter) =>\n    tasks.filter((task) =>\n      task.text.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n\nexport const sortedArray = createSelector(\n  [filteredByDateAndName, sortBy],\n  (tasks, sort) => {\n    let initialTasks = tasks.slice();\n    switch (sort) {\n      case \"nameAsc\":\n        return initialTasks.slice().sort((a, b) => {\n          const nameA = a.text.toLowerCase();\n          const nameB = b.text.toLowerCase();\n          if (nameA < nameB) return -1;\n          if (nameA > nameB) return 1;\n          return 0;\n        });\n      case \"nameDsc\":\n        return initialTasks.slice().sort((a, b) => {\n          const nameA = a.text.toLowerCase();\n          const nameB = b.text.toLowerCase();\n          if (nameA > nameB) return -1;\n          if (nameA < nameB) return 1;\n          return 0;\n        });\n      case \"dateAsc\":\n        return initialTasks.slice().sort((a, b) => {\n          const dateA = a.date;\n          const dateB = b.date;\n          return new Date(dateB) - new Date(dateA);\n        });\n      case \"dateDsc\":\n        return initialTasks.slice().sort((a, b) => {\n          const dateA = a.date;\n          const dateB = b.date;\n          return new Date(dateA) - new Date(dateB);\n        });\n      case \"sortClear\":\n        return initialTasks;\n      default:\n        return tasks;\n    }\n  }\n);\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TaskListComponent.module.css\";\r\nimport classNames from \"classnames\";\r\nimport cx from \"classnames\";\r\nimport * as tasksActions from \"../../redux/tasks/tasksActions\";\r\nimport { connect } from \"react-redux\";\r\nimport * as selectors from \"../../redux/selectors/selectors\";\r\n\r\nconst TaskListComponent = ({ tasks, onUpdateCompleted, onDeleteTask }) => {\r\n  const firstLine = cx(styles.listItem, styles.firstLine);\r\n  return (\r\n    <div className={styles.mainWrapper}>\r\n      <h2 className={styles.title}>Hello from TodoList</h2>\r\n      <ul className={styles.list}>\r\n        <li className={firstLine}>\r\n          <div>\r\n            <p>Task Name</p>\r\n          </div>\r\n          <div>\r\n            <p>Task Date</p>\r\n          </div>\r\n          <div>\r\n            <p>Task Status</p>\r\n          </div>\r\n          <div>\r\n            <p>Delete Task</p>\r\n          </div>\r\n        </li>\r\n        {tasks &&\r\n          tasks.map((task) => {\r\n            const { completed, notcompleted } = styles;\r\n            const textDecor = classNames(\r\n              task.completed ? completed : notcompleted\r\n            );\r\n            return (\r\n              <li key={task.id} className={styles.listItem}>\r\n                <div>\r\n                  <p className={textDecor}>{task.text}</p>\r\n                </div>\r\n                <div>\r\n                  <p>{task.showDate}</p>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Completed:\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={task.completed}\r\n                      onChange={() => onUpdateCompleted(task.id)}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.btn}\r\n                    onClick={() => onDeleteTask(task.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskListComponent.propTypes = {\r\n  onDeleteTask: PropTypes.func.isRequired,\r\n  tasks: PropTypes.array.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tasks: selectors.sortedArray(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCompleted: tasksActions.completeTask,\r\n  onDeleteTask: tasksActions.deleteTask,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListComponent);\r\n","export const ActionType = {\n  FILTER_TASKS_NAME: \"FILTER_TASKS_NAME\",\n};\n\nexport const filterByName = (filter) => ({\n  type: ActionType.FILTER_TASKS_NAME,\n  payload: { filter },\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FilterNameComponent.module.css\";\nimport { connect } from \"react-redux\";\nimport * as filterByNameActions from \"../../redux/filterByName/filterByNameActions\";\nimport * as selectors from \"../../redux/selectors/selectors\";\n\nclass FilterNameComponent extends Component {\n  static propTypes = {\n    onChangeFilter: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    this.props.onChangeFilter(e.target.value);\n  };\n  render() {\n    const { filter } = this.props;\n    return (\n      <div className={styles.mainWrapper}>\n        <span className={styles.title}>Filter Task By Name</span>\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={this.handleChange}\n          placeholder=\"Type to filter tasks...\"\n          className={styles.input}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filter: selectors.filterName(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: filterByNameActions.filterByName,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterNameComponent);\n","export const ActionType = {\n  FILTER_TASKS_DATE: \"FILTER_TASKS_DATE\",\n};\n\nexport const filterByDate = (filter) => ({\n  type: ActionType.FILTER_TASKS_DATE,\n  payload: { filter },\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FilterDateComponent.module.css\";\nimport { connect } from \"react-redux\";\nimport * as filterByDateActions from \"../../redux/filterByDate/filterByDateActions\";\nimport * as selectors from \"../../redux/selectors/selectors\";\n\nclass FilterDateComponent extends React.Component {\n  static propTypes = {\n    onChangeFilter: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    this.props.onChangeFilter(e.target.value);\n  };\n\n  render() {\n    const { filter } = this.props;\n    return (\n      <div className={styles.mainWrapper}>\n        <span className={styles.title}>Filter by Date</span>\n        <div>\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={filter}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filter: selectors.filterDate(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: filterByDateActions.filterByDate,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterDateComponent);\n","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport AddTaskComponent from \"./AddTasksComponent/AddTasksComponent\";\r\nimport SortTasksComponent from \"./SortTasksComponent/SortTasksComponent\";\r\nimport TaskListComponent from \"./TaskListComponent/TaskListComponent\";\r\nimport FilterNameComponent from \"./FilterNameComponent/FilterNameComponent\";\r\nimport FilterDateComponent from \"./FilterDateComponent/FilterDateComponent\";\r\n\r\nconst App = () => (\r\n  <div className={styles.mainWrapper}>\r\n    <h1 className={styles.title}>Redux App</h1>\r\n    <AddTaskComponent />\r\n    <FilterDateComponent />\r\n    <FilterNameComponent />\r\n    <SortTasksComponent />\r\n    <TaskListComponent />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { ActionType } from \"./tasksActions\";\r\n\r\nconst tasksReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case ActionType.GET_TASKS:\r\n      return payload;\r\n\r\n    case ActionType.ADD_TASK:\r\n      return [...state, payload.task];\r\n\r\n    case ActionType.DELETE_TASK:\r\n      return state.filter((task) => task.id !== payload);\r\n\r\n    case ActionType.COMPLETE_TASK:\r\n      return state.map((task) =>\r\n        task.id === payload ? { ...task, completed: !task.completed } : task\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import { ActionType } from \"./filterByNameActions\";\n\nconst filterByNameReducer = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case ActionType.FILTER_TASKS_NAME:\n      return payload.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterByNameReducer;\n","import { ActionType } from \"./filterByDateActions\";\r\n\r\nconst filterByDateReducer = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case ActionType.FILTER_TASKS_DATE:\r\n      return payload.filter;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterByDateReducer;\r\n","import { createStore, combineReducers } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport tasksReducer from \"./tasks/tasksReducer\";\nimport { loadState } from \"./localStorage.js\";\nimport filterByNameReducer from \"./filterByName/filterByNameReducer\";\nimport filterByDateReducer from \"./filterByDate/filterByDateReducer\";\nimport { sortByReducer } from \"./sort/sortReducers\";\n\nconst rootReducer = combineReducers({\n  tasks: tasksReducer,\n  filterByName: filterByNameReducer,\n  filterByDate: filterByDateReducer,\n  sort: sortByReducer,\n});\n\nconst persistedState = loadState();\n\nconst store = createStore(rootReducer, persistedState, devToolsEnhancer());\n\nexport default store;\n","import { ActionType } from \"./sortActions\";\n\nexport const sortByReducer = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case ActionType.SORT_BY:\n      return payload.sort;\n    default:\n      return state;\n  }\n};\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport { saveState } from \"./redux/localStorage\";\nimport \"./index.css\";\n\nstore.subscribe(() => {\n  saveState({\n    tasks: store.getState().tasks,\n  });\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"SortTasksComponent_mainWrapper__RaB1Q\",\"title\":\"SortTasksComponent_title__l0MDD\",\"btnContainer\":\"SortTasksComponent_btnContainer__2k_yX\",\"btn\":\"SortTasksComponent_btn__dZeVS\"};"],"sourceRoot":""}